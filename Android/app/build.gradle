apply plugin: 'com.android.application'
// 声明是Android程序，
//com.android.application 表示这是一个应用程序模块
//com.android.library 标识这是一个库模块
//区别：前者可以直接运行，后着是依附别的应用程序运行
android {//配置项目构建的各种属性
    compileSdkVersion 29//设置编译时用的Android版本
    defaultConfig {
        applicationId "com.example.lesliewang.demo"//项目的包名
        minSdkVersion 15//项目最低兼容的版本
        targetSdkVersion 29//项目的目标版本
        versionCode 1//版本号
        versionName "1.0"//版本名称
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //表明要使用AndroidJUnitRunner进行单元测试
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
        multiDexEnabled true//解决第三方包导入报错
    }
    //Error:Execution failed for task ':app:mergeDebugResources'. > Crunching Cruncher scrollbar_thumb.9.png failed, see logs
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    buildTypes {// 生产/测试环境配置
        release {// 生产环境
            minifyEnabled false//是否对代码进行混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//指定混淆的规则文件
        }
    }
    //添加jdk1.8支持
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    //打包时的相关配置
    //pickFirsts做用是 当有重复文件时 打包会报错 这样配置会使用第一个匹配的文件打包进入apk
    // 表示当apk中有重复的META-INF目录下有重复的LICENSE文件时  只用第一个 这样打包就不会报错
    //merges何必 当出现重复文件时 合并重复的文件 然后打包入apk
    //这个是有默认值得 merges = [] 这样会把默默认值去掉  所以我们用下面这种方式 在默认值后添加
    packagingOptions {
        //这个是在同时使用butterknife、dagger2做的一个处理。同理，遇到类似的问题，只要根据gradle的提示，做类似处理即可。
        //去除重复的文件
        exclude 'edu/stanford/nlp/pipeline/demo/*'

    }

}

dependencies {
    //项目的依赖关系
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //本地jar包依赖
    implementation 'androidx.appcompat:appcompat:1.1.0'
    //远程依赖
    implementation 'com.google.android.material:material:1.1.0'
    //引入design库
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    //声明测试用例库
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation('androidx.annotation:annotation:1.1.0') {
        force = true
    }
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    //导入jar包 讯飞
    implementation files('libs/Msc.jar')
    implementation files('libs/Sunflower.jar')
    //room
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    //nlp工具包
    implementation files('libs/stanford-corenlp-3.9.2-models.jar')
    implementation files('libs/stanford-corenlp-3.9.2.jar')
    //解决第三方包导入报错
    implementation 'com.android.support:multidex:1.0.3'
    //网络请求 Retrofit库(基于okHttp封装的网络请求库)
    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'// 用Gson解析json的转换器
    //百分比
    implementation 'com.zhy:percent-support-extends:1.1.1'

}
